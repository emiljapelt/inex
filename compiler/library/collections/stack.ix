struct stack<T>(head: T, tail: stack<T>);

internal push<T>(e: T, lst: stack<T>) {
    lst := new stack<T>(e, lst);
}

internal peek<T>(lst: stack<T>, out: T) {
    out := lst.head;
}

internal pop<T>(lst: stack<T>, out: T) {
    out := lst.head;
    lst := lst.tail;
}

internal from_array<T>(a: T[], out: stack<T>) {
    out := null;

    for(i ::= 0; i < |a|; i +:= 1) {
        out := new stack(a[i], out);
    }
}