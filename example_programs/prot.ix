
struct list<T>(head: T, tail: list<T>);

entry main() {

    l :list<int>:= null;
    l2 :stable list<int>:= {1,{2,{3,null}}};
    to_list([1,2,3], l);
    i : int;
    sum(l,i);
    print i, '\n';
    sum(l2,i);
    print i, '\n';
}

internal to_list<T>(a: T[], l: list<T>) {
    for(i ::= 0; i < |a|; i +:= 1) l := {a[i], l};
}


internal sum(l: const list<int>, i: int) {
    handle :stable:= l;
    i := 0;
    while(handle != null) {
        i +:= handle.head;
        handle := handle.tail;
    }
}