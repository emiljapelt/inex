
extern char_to_int ::= (c: const char, o: int) {
    if (c) 
        is ('0') o := 0;
        is ('1') o := 1;
        is ('2') o := 2;
        is ('3') o := 3;
        is ('4') o := 4;
        is ('5') o := 5;
        is ('6') o := 6;
        is ('7') o := 7;
        is ('8') o := 8;
        is ('9') o := 9;
    else halt("Could not find integer value of: ", c, '\n');
}

extern split_on ::= (split: const char, str: char[], o: char[][]) {

    splits ::= 0;
    for(i ::= 0; i < |str|; i +:= 1) if (str[i] = split) splits +:= 1;

    segs ::= new char[][splits + 1];

    seg_idx ::= 0;
    flw ::= 0;
    for(idx ::= 0; idx < |str|; idx +:= 1) {
        if (str[idx] = split) {
            seg_len ::= idx - flw;
            seg ::= new char[seg_len];
            for (i ::= 0; i < seg_len; i +:= 1) {
                seg[i] := $str[flw+i];
            }
            segs[seg_idx] := seg;
            seg_idx +:= 1;
            flw := $idx + 1;
        }
    }

    last_seg_len ::= |str| - flw;
    last_seg ::= new char[last_seg_len];
    for (i ::= 0; i < last_seg_len; i +:= 1) {
        last_seg[i] := str[flw];
        flw +:= 1;
    }
    segs[seg_idx] := last_seg;

    o := segs;
}

extern string_to_int ::= (cs: const char[], o: int) {
    if (cs = null) stop;
    value ::= 0;

    for(i ::= 0; i < |cs|; i +:= 1) {
        v : int;
        char_to_int(cs[i], v);
        value *:= 10;
        value +:= v;
    }

    o := value;
}

extern substring ::= (str: char[], begin: int, len: int, o: char[]) {
    if (str = null) stop;
    if (begin = null) halt("Substring beginning at null");
    if (len = null) halt("Substring length was null");
    if (begin < 0 || begin > |str|) halt("Substring beginning outside string");
    if ((len < 0) || (begin+len > |str|)) halt("Substring length outside string");

    o := new char[len];

    for(i ::= 0; i < len; i +:= 1) {
        o[i] := str[begin + i];
    }
    
}