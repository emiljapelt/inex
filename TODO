- Make VM support 32bit systems, using preprosession directives to define type size and header manipulators
- More data types (float, string, etc. )
    - use Quarter instead of Short
    - consider how to specify types in source code
        - float, h_float, uh_float, u_int, uq_int
        - float, half float, unsigned half float, unsigned int, unsigned quarter int
- Refine error printing for the compiler
- Rework binary files, to this:
    - VM use Macros for simple types again
    - If a command_line argument could not be parsed, check if it a legal global variable
- Add default printing for structures
- Cleanup the codebase
- Do some automated testing
- Generalize PLACE_* instructions by size
- Implement generics inference for struct construction and routine calls
    - Would strengthen generics
- Implement generic type resolution
    - Some thing like: "if (T is int) { ... } "
    - Would strengthen type composition
- Implement HOR (Higher-order-routines)
    - Some thing like: "internal map<T,U>(target: T[], rt: _(T,U))"
    - Where "_(T,U)" is some routine taking arguments (T,U)
    - Would strengthen generics, but might be weird to work with.
- Implement file inclusion
    - Some thing like "include ./helpers/list.ix;"
    - Includes the source code from the specified file, "." being this files location.
    - Requires recursive inclusive, name space scoping based on files and keeping track of which files have already been included (no multi compilations)